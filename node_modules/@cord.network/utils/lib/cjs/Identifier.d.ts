import type { HexString } from '@polkadot/util/types';
import { IPublicIdentity } from '@cord.network/types';
export declare function hashToIdentifier(identifier: HexString | Uint8Array | string, iDPrefix: number): string;
export declare function hashToUri(identifier: HexString | Uint8Array | string, iDPrefix: number, prefix: string): string;
export declare function uriToIdentifier(identifier: string | null | undefined): string;
/**
 * @name checkIdentifier
 * @summary Validates an identifier.
 * @description
 * From the provided input, validate that the address is a valid input.
 */
export declare function checkIdentifier(address: HexString | string): [boolean, string | null];
/**
 * Creates Account Identifier from Fetches Account Address.
 *
 * @param address Account address to derive it's identifier.
 *
 * @returns The Address identifier from the Account Address.
 */
export declare function getAccountIdentifierFromAddress(address: IPublicIdentity['address']): string;
/**
 * Fetches Account Address from Identifier.
 *
 * @param address Account identifier to derive it's address from.
 * @throws When the identifier is not prefixed with the defined ACCOUNT_IDENTIFIER_PREFIX.
 * @throws [[ERROR_INVALID_ID_PREFIX]].
 *
 * @returns The Address derived from the Account Identifier.
 */
export declare function getAccountAddressFromIdentifier(address: string): IPublicIdentity['address'];
