/**
 * @packageDocumentation
 * @module DataUtils
 */
import type { CordAddress } from '@cord.network/types';
/**
 *  Validates the format of the given blake2b hash via regex.
 *
 * @param hash Hash string to validate for correct Format.
 * @param name Contextual name of the address, e.g. "stream owner".
 * @throws [[ERROR_HASH_TYPE]] when hash not of type string or of invalid Format.
 *
 * @returns Boolean whether the given hash string checks out against the Format.
 */
export declare function validateId(id: string, name: string): boolean;
/**
 * Verifies a given address string against the External Address Format (SS58) with our Prefix of 29.
 *
 * @param input Address string to validate for correct Format.
 */
export declare function verifyCordAddress(input: unknown): void;
/**
 * Type guard to check whether input is an SS58 address with our prefix of 29.
 *
 * @param input Address string to validate for correct format.
 * @returns True if input is a CordAddress, false otherwise.
 */
export declare function isCordAddress(input: unknown): input is CordAddress;
export { isHex } from '@polkadot/util';
/**
 * Validates the format of a hex string via regex.
 *
 * @param input Hex string to validate for correct format.
 * @param bitLength Expected length of hex in bits.
 */
export declare function verifyIsHex(input: unknown, bitLength?: number): void;
